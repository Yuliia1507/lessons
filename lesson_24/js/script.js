
/*Homework
==================================================
Задача №1*/

let someVar = 0; /* оголошено змінну "someVar" та присвоєно їй значення "0"*/
++someVar; /* ++ інкремент - збільшує значення змінної на 1*/

if (someVar) {
	console.log(someVar);
}
/* Відповідно 0 збільшиться на 1, буде 1 і тому число 1 потрапить в консоль.*/

/*=================================================
Задача№2
За допомогою циклу FOR виведіть в консоль 10 рядків:
Пункт №1
Пункт №2
і т.д.
*/

for (let i = 1; i <= 10; i++) {
	console.log("Пункт №" + i);
}
/*let i = 1 - початок циклу, привласнюємо змінній "i" значення 1;
i <= 10 - умова закічення циклу, цикл закінчиться, коли "i" буде менше або дорівнює 10, адже нам потрібно вивести 10 пунктів. ***Запитання: Цю умову можна ж було записати так: i < 11 ?***;
++i - крок, збільшуємо "i" на 1 ;*/

/*=================================================
Задача №3
Що потрапить в консоль ?*/

if (2 * 20 <= 10 || 30 / 2 < 5 && 10 <= "10" || 20 === "20") {
	console.log('000');
}
/* Якщо виконається умова в дужках, тобто результатом буде "true", то в консоль виведеться значення "000".
І так... 2 * 20 <= 10 (40 не є менше або дорівнює 10 - результатом буде "false"),

30 / 2 < 5 && 10 <= "10" (30 ділимо на 2, буде 15...15 не є меншеб ніж 5, результат "false") та 10 <= "10"( "true", так як рядок '10' стає числом 10, а 10 = 10). 
Результом цього (30 / 2 < 5 && 10 <= "10") буде "false", тому що перший операнд отримав результат "false" і хоча другий отримав результат "true", це вже немає ніякого сенсу, адже оператор && повертає "true" коли обидва операнда "true";

20 === "20" результатом буде "false", адже тут порівнюється число з рядком, бо оператор суворого порівняння не переводить рядок в число, а порівнює як воно є.

Як результат, умова не виконалась, так як всі значення "false" (false || false || false ).
*/

/*=================================================
Задача №4
Створіть функцію, яка повертає результат ділення числа a на число b з додаванням рядка "Результат ділення: "
Викличте функцію передаючі різні значення, у тому числі не передаючи зовсім.
Функція не має повертати NaN, Infinite або помилку */

/* Створюємо функцію з назвою myFunction та вказуємо параметри a та b*/
function myFunction(a, b) {
	const result = a / b;
	/* за допомогою функції isFinite перевіряємо чи передане значення є кінцевим числом (finite), тобто не є Infinity або -Infinity або NaN. Тепер зрозуміло, що можна було б обійтися і без функції isNaN, так як в функції isFinite є перевірка на NaN, дійшло нарешті*/
	if (isFinite(result)) {
		return `Результат ділення: ${result}`;
	} else {
		return "Результат ділення не є кінцевим числом.";
	}
}
console.log(myFunction('Cat', 7)); // Введені дані не є числами.
console.log(myFunction(12, 'Dog')); // Введені дані не є числами.
console.log(myFunction(3, 0));   //  Результат ділення не є кінцевим числом.
console.log(myFunction(Infinity, 1));  // Результат ділення не є кінцевим числом
console.log(myFunction(20, 2));  // Результат ділення: 10
console.log(myFunction()); // Введені дані не є числами.

/*=================================================
Задача №5
Створіть масив даних - 5 елементів, один з яких число 10
Обробіть масив за допомогою методу перебору
Перевіряйте елемент на відповідність числу 10, та у разі відповідності, виводьте в консоль
 */

let someArray = [8, 6, 5, 3, 10]; /*Створили масив даних з 5 елементів, один з яких число 10*/

/* Обробляємо масив за допомогою методу перебору forEach*/
someArray.forEach(element => {
	/* Перевіряємо елемент на відповідність числу 10*/
	if (element === 10) {
		/* Так як одним з елементів масиву є число 10, виводимо його в консоль*/
		console.log(`А ось і число ${element}`);
	}
});