@use "sass:math";

// Кольори
$darkColor: rgb(16, 24, 40);
$blueColor: rgb(6, 89, 134);
$greyColor: rgb(24, 24, 24);
$lightBlue: rgb(0, 134, 201);
// Функції
@import "_functions.scss";
// Шрифти
@import "_fonts.scss";
// Іконки
@import "_icons.scss";
// Обнулення
@import "_reset.scss";
// Компоненти
@import "_header.scss";

// Мінімальна ширина сторінки
$minWidth: 320;
// Ширина полотна (макету)
$maxWidth: 1440;
// Ширина обмежуючого контейнера (0 = немає обмеження)
$maxWidthContainer: 1216;
// Загальний відступ у контейнера
// (30 = по 15px ліворуч і праворуч, 0 = немає відступу)
$containerPadding: 30;
// Ширина спрацьовування першого брейкпоінту
$containerWidth: $maxWidthContainer + $containerPadding;

body {
	font-family: "Inter";

	&.menu-open {
		overflow: hidden;
		touch-action: none;
		overscroll-behavior: none;
	}
}
.wrapper {
	overflow: clip;
	min-height: 100%;
	main {
		flex-grow: 1;
	}
}

[class*="__container"] {
	margin: 0 auto;
	max-width: toRem(1246);
	padding: 0 toRem(15);
}

.hero {
	position: relative;
	@media (max-width: toEm(900)) {
		&::after {
			content: "";
			position: absolute;
			top: 0;
			left: 0;
			width: 100%;
			height: 100%;
			opacity: 0.2;
			background-color: rgb(0, 0, 0);
			z-index: -1;
		}
	}
	// .hero__container

	&__container {
		display: grid;
		grid-template-columns: repeat(2, 1fr);
		@media (max-width: toRem(900)) {
			grid-template-columns: 1fr;
		}
	}
	&__item {
		align-items: center;
		width: fit-content;
		border: toRem(1) solid rgb(185, 230, 254);
		border-radius: toRem(16);
		padding: toRem(4) toRem(8) toRem(4) toRem(4);
		background: rgb(240, 249, 255);
		display: flex;
		gap: toRem(12);
		row-gap: toRem((10));
		&:not(:last-child) {
			margin-bottom: toRem(16);
		}
		@media (max-width: toEm(600)) {
			flex-direction: column;
			border: none;
			background-color: transparent;
		}
	}
	// .hero__body

	&__body {
		z-index: 2;
		@include adaptiveValue("max-width", 544, 290);
		@include adaptiveValue("padding-right", 24, 10);
		@include adaptiveValue("padding-top", 170, 20);
		@include adaptiveValue("padding-bottom", 170, 20);
		&--padding {
			@include adaptiveValue("padding-top", 205, 20);
			@include adaptiveValue("padding-bottom", 205, 20);
		}
	}

	// .hero__title

	&__title {
		color: $darkColor;
		font-weight: 600;
		@include adaptiveValue("font-size", 60, 30);
		@include adaptiveValue("line-height", 72, 35);
		&:not(:last-child) {
			margin-bottom: toRem(24);
		}
		@media (max-width: toEm(900)) {
			color: white;
		}
	}

	// .hero__text

	&__text {
		p {
			color: $greyColor;
			@include adaptiveValue("font-size", 20, 18);
			line-height: toRem(30);
			@media (max-width: toEm(900)) {
				color: white;
			}
		}
		&:not(:last-child) {
			@include adaptiveValue("margin-bottom", 48, 20);
		}
	}
	&__buttons-wrap {
		display: flex;
		align-items: center;
		flex-wrap: wrap;
		gap: toRem(12);
	}

	&__link {
		display: flex;
		align-items: center;
		flex-direction: row-reverse;
		justify-content: flex-end;
		column-gap: toRem(12);
		color: rgb(71, 84, 103);
		font-size: toRem(18);
		font-weight: 600;
		line-height: toRem(28);
		transition: color 0.3s;
		&::before {
			transition: transform 0.3s;
		}
		@media (any-hover: hover) {
			&:hover {
				color: $lightBlue;
			}
			&:hover::before {
				transform: translateX(toRem(5));
			}
		}
	}
	// .hero__image

	&__image {
		position: absolute;
		top: 0;
		right: -100%;
		object-fit: cover;
		width: calc(52% - toRem(24));
		height: 100%;
		clip-path: polygon(0% 0, 100% 0%, 100% 100%, 0% 100%);
		transition: right 1.5s ease;
		animation: revealClipPath 1s ease forwards;
		animation-delay: 1s;
		&::before {
			content: "";
		}
		@media (max-width: toEm(900)) {
			top: 0;
			left: 0;
			z-index: -2;
			width: 100%;
			clip-path: polygon(0% 0, 100% 0%, 100% 100%, 0% 100%);
			animation: none;
		}

		&.show {
			right: 0;
		}
	}
}

@keyframes revealClipPath {
	0% {
		clip-path: polygon(0 0, 100% 0%, 100% 100%, 0% 100%);
	}
	100% {
		clip-path: polygon(10% 0, 100% 0%, 100% 100%, 0% 100%);
	}
}

.button {
	flex-shrink: 0;
	@include adaptiveValue("font-size", 18, 16);
	font-weight: 600;
	line-height: toRem(28);
	@include adaptiveValue("padding-top", 16, 5);
	@include adaptiveValue("padding-bottom", 16, 5);
	@include adaptiveValue("padding-left", 22, 10);
	@include adaptiveValue("padding-right", 22, 10);
	&--transparent {
		color: rgb(52, 64, 84);
		border: toRem(1) solid rgb(208, 213, 221);
		border-radius: toRem(8);
		box-shadow: 0px 1px 2px 0px rgba(16, 24, 40, 0.05);
		background: rgb(255, 255, 255);
		transition: all 0.3s;
		display: flex;
		align-items: center;
		gap: toRem(5);
		&::before {
			font-size: toRem(20);
			font-weight: 600;
		}
		@media (any-hover: hover) {
			&:hover {
				border: toRem(1) solid $lightBlue;
				color: $lightBlue;
			}
		}
	}

	&--background {
		@extend .action-header__button;
	}
}
.item-hero {
	color: rgb(2, 106, 162);
	font-size: toRem(14);
	font-weight: 500;
	line-height: toRem(20);
	&__label {
		padding: toRem(2) toRem(10);
		box-sizing: border-box;
		border: toRem(1) solid rgb(185, 230, 254);
		border-radius: toRem(16);
		background: rgb(255, 255, 255);
	}
	&__text {
		display: flex;
		flex-direction: row-reverse;
		align-items: center;
		justify-content: flex-end;
		gap: toRem(7);
		&::before {
			color: rgb(11, 165, 236);
			font-size: toRem(12);
		}
		@media (max-width: toEm(600)) {
			color: #fff;
		}
	}
}
.hero__item,
.hero__title,
.hero__text,
.hero__buttons-wrap,
.hero__link {
	opacity: 0;
	transform: translateY(-20px);
	transition:
		opacity 0.5s ease,
		transform 1s ease;
}

.hero__item.show,
.hero__title.show,
.hero__text.show,
.hero__buttons-wrap.show,
.hero__link.show {
	opacity: 1;
	transform: translateY(0);
}

